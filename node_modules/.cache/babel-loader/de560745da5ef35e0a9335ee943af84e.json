{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/test-react/src/App.js\",\n    _s = $RefreshSig$();\n\n//import Todo from './Components/Todo'\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [userName, setUserName] = useState();\n  const [message, setMessage] = useState();\n  const [input, setInput] = useState({\n    userName,\n    message\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setUserName(e.target.value),\n      value: userName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setMessage(e.target.value),\n      value: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), input.map(curr => {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" \", curr, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true);\n}\n\n_s(App, \"wHbpavr/mwRkdF/KyiulTO5c9BM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","App","userName","setUserName","message","setMessage","input","setInput","e","target","value","map","curr"],"sources":["/data/data/com.termux/files/home/test-react/src/App.js"],"sourcesContent":["//import Todo from './Components/Todo'\nimport {useState} from 'react'\nfunction App() {\n  const [userName, setUserName] = useState()\n  const [message, setMessage] = useState()\n  const [input, setInput] = useState({userName, message})\n  return(\n    <>\n      <input type='text' onChange={e => setUserName(e.target.value)} value={userName} />\n      <input type='text' onChange={e => setMessage(e.target.value)} value={message} />\n      {\n      input.map((curr) =>{\n        return <h1> {curr } </h1>\n      })\n      }\n    </>\n  )\n}\n\nexport default App;\n"],"mappings":";;;AAAA;AACA,SAAQA,QAAR,QAAuB,OAAvB;;;;AACA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,EAAxC;EACA,MAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,EAAtC;EACA,MAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC;IAACE,QAAD;IAAWE;EAAX,CAAD,CAAlC;EACA,oBACE;IAAA,wBACE;MAAO,IAAI,EAAC,MAAZ;MAAmB,QAAQ,EAAEI,CAAC,IAAIL,WAAW,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAA7C;MAA+D,KAAK,EAAER;IAAtE;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAO,IAAI,EAAC,MAAZ;MAAmB,QAAQ,EAAEM,CAAC,IAAIH,UAAU,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAA5C;MAA8D,KAAK,EAAEN;IAArE;MAAA;MAAA;MAAA;IAAA,QAFF,EAIEE,KAAK,CAACK,GAAN,CAAWC,IAAD,IAAS;MACjB,oBAAO;QAAA,gBAAMA,IAAN;MAAA;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CAFD,CAJF;EAAA,gBADF;AAWD;;GAfQX,G;;KAAAA,G;AAiBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}