{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/test-react/src/Components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport { Button, TextField, Card } from '@mui/material';\nimport React, { useState } from 'react';\nimport './Todo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Todo = () => {\n  _s();\n\n  const [userName, setUserName] = useState();\n  const [message, setMessage] = useState();\n  const [input, setInput] = useState([]);\n\n  const click = () => {\n    if (!userName && !message) {\n      alert('fill the some data');\n    } else {\n      setInput([...input, {\n        userName,\n        message\n      }]);\n      setMessage('');\n      setUserName('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    variant: \"outlined\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Add Your Note \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      placeholder: \"Enter your title\",\n      type: \"text\",\n      variant: \"outlined\",\n      onChange: e => setUserName(e.target.value),\n      value: userName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      placeholder: \"entwr mesaage\",\n      type: \"text\",\n      variant: \"outlined\",\n      onChange: e => setMessage(e.target.value),\n      value: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: click,\n      children: \" hello word... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), input.map(curr => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\" \", curr.userName, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\" \", curr.message, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Todo, \"TOg+d92yHWa1PUPJfeCi/J9d1pg=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["Button","TextField","Card","React","useState","Todo","userName","setUserName","message","setMessage","input","setInput","click","alert","e","target","value","map","curr"],"sources":["/data/data/com.termux/files/home/test-react/src/Components/Todo.js"],"sourcesContent":["import {Button, TextField, Card} from '@mui/material'\nimport React, {useState} from 'react'\nimport './Todo.css'\nconst Todo = () =>{\n    const [userName, setUserName] = useState()\n  const [message, setMessage] = useState()\n  const [input, setInput] = useState([])\n  const click = () =>{\n    if (!userName && !message) {\n      alert('fill the some data')\n    }else{\n      setInput([...input, {userName, message}])\n      setMessage('')\n      setUserName('')\n    }\n  }\n  return(\n    <Card variant='outlined'>\n      <h1> Add Your Note </h1>\n      <TextField placeholder='Enter your title' type='text' variant='outlined' onChange={e => setUserName(e.target.value)} value={userName} />\n      <TextField placeholder='entwr mesaage' type='text' variant='outlined' onChange={e => setMessage(e.target.value)} value={message} />\n      <button onClick={click}> hello word... </button>\n      {\n        input.map((curr) =>{\n          return (\n            <>\n            <h1> {curr.userName} </h1>\n            <h1> {curr.message} </h1>\n          </>\n          )\n        })\n      }\n    </Card>\n  )\n}\nexport default Todo"],"mappings":";;;AAAA,SAAQA,MAAR,EAAgBC,SAAhB,EAA2BC,IAA3B,QAAsC,eAAtC;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,YAAP;;;;AACA,MAAMC,IAAI,GAAG,MAAK;EAAA;;EACd,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,EAAxC;EACF,MAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,EAAtC;EACA,MAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;;EACA,MAAMQ,KAAK,GAAG,MAAK;IACjB,IAAI,CAACN,QAAD,IAAa,CAACE,OAAlB,EAA2B;MACzBK,KAAK,CAAC,oBAAD,CAAL;IACD,CAFD,MAEK;MACHF,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW;QAACJ,QAAD;QAAWE;MAAX,CAAX,CAAD,CAAR;MACAC,UAAU,CAAC,EAAD,CAAV;MACAF,WAAW,CAAC,EAAD,CAAX;IACD;EACF,CARD;;EASA,oBACE,QAAC,IAAD;IAAM,OAAO,EAAC,UAAd;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,SAAD;MAAW,WAAW,EAAC,kBAAvB;MAA0C,IAAI,EAAC,MAA/C;MAAsD,OAAO,EAAC,UAA9D;MAAyE,QAAQ,EAAEO,CAAC,IAAIP,WAAW,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnG;MAAqH,KAAK,EAAEV;IAA5H;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,SAAD;MAAW,WAAW,EAAC,eAAvB;MAAuC,IAAI,EAAC,MAA5C;MAAmD,OAAO,EAAC,UAA3D;MAAsE,QAAQ,EAAEQ,CAAC,IAAIL,UAAU,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAA/F;MAAiH,KAAK,EAAER;IAAxH;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAQ,OAAO,EAAEI,KAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,EAMIF,KAAK,CAACO,GAAN,CAAWC,IAAD,IAAS;MACjB,oBACE;QAAA,wBACA;UAAA,gBAAMA,IAAI,CAACZ,QAAX;QAAA;UAAA;UAAA;UAAA;QAAA,QADA,eAEA;UAAA,gBAAMY,IAAI,CAACV,OAAX;QAAA;UAAA;UAAA;UAAA;QAAA,QAFA;MAAA,gBADF;IAMD,CAPD,CANJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CA/BD;;GAAMH,I;;KAAAA,I;AAgCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}