{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/test-react/src/Components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport { Button, TextField, Card } from '@mui/material';\nimport React, { useState } from 'react';\nimport './Todo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Todo = () => {\n  _s();\n\n  const like = 0;\n  const [inputVal, setInputVal] = useState('');\n  const [items, setItems] = useState([]);\n\n  const handelChange = e => {\n    setInputVal(e.target.value);\n  };\n\n  const handelAdd = () => {\n    setItems([...items, inputVal]);\n  };\n\n  const handeleRemove = id => {\n    const newItem = items.filter((elem, ind) => {\n      return ind !== id;\n    });\n    setItems(newItem);\n  };\n\n  const handeleLike = id => {\n    items.filter((curr, ind) => {\n      return like + 1;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    variant: \"outlined\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Todo \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      onChange: handelChange,\n      label: \"enter something\",\n      variant: \"standard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handelAdd,\n      variant: \"contained\",\n      children: \" + \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), items.map((elem, ind) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\" \", elem]\n        }, ind, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => handeleRemove(ind),\n          children: \" remove \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => handeleLike(ind),\n          children: [\" \", elem.like]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Todo, \"ETrWZxk5Shf/YgIMhGqz1Bb5wvI=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["Button","TextField","Card","React","useState","Todo","like","inputVal","setInputVal","items","setItems","handelChange","e","target","value","handelAdd","handeleRemove","id","newItem","filter","elem","ind","handeleLike","curr","map"],"sources":["/data/data/com.termux/files/home/test-react/src/Components/Todo.js"],"sourcesContent":["import {Button, TextField, Card} from '@mui/material'\nimport React, {useState} from 'react'\nimport './Todo.css'\nconst Todo = () =>{\n  const like = 0\n  const [inputVal, setInputVal] = useState('')\n  const [items, setItems ] = useState([])\n  const handelChange = (e) =>{\n    setInputVal(e.target.value)\n  }\n  const handelAdd = () =>{\n    setItems([...items, inputVal])\n  }\n  const handeleRemove = (id) =>{\n    const newItem = items.filter((elem, ind) =>{\n      return ind !== id\n    })\n    setItems(newItem)\n  }\n  const handeleLike = (id) =>{\n    items.filter((curr, ind) =>{\n      return like + 1\n    })\n  }\n  return(\n    <Card variant='outlined'>\n      <h1> Todo </h1>\n      <TextField onChange={handelChange} label=\"enter something\" variant=\"standard\" />\n      <Button onClick={handelAdd} variant='contained'> + </Button>\n      {\n        items.map((elem, ind) =>{\n          return(\n            <>\n            <h1 key={ind}> {elem}</h1>\n            <Button variant='outlined' onClick={() => handeleRemove(ind)}> remove </Button>\n            <Button variant='outlined' onClick={() => handeleLike(ind)}> {elem.like}</Button>\n            </>\n          )\n        })\n      }\n    </Card>\n  )\n}\nexport default Todo"],"mappings":";;;AAAA,SAAQA,MAAR,EAAgBC,SAAhB,EAA2BC,IAA3B,QAAsC,eAAtC;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,YAAP;;;;AACA,MAAMC,IAAI,GAAG,MAAK;EAAA;;EAChB,MAAMC,IAAI,GAAG,CAAb;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAqBN,QAAQ,CAAC,EAAD,CAAnC;;EACA,MAAMO,YAAY,GAAIC,CAAD,IAAM;IACzBJ,WAAW,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;EACD,CAFD;;EAGA,MAAMC,SAAS,GAAG,MAAK;IACrBL,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWF,QAAX,CAAD,CAAR;EACD,CAFD;;EAGA,MAAMS,aAAa,GAAIC,EAAD,IAAO;IAC3B,MAAMC,OAAO,GAAGT,KAAK,CAACU,MAAN,CAAa,CAACC,IAAD,EAAOC,GAAP,KAAc;MACzC,OAAOA,GAAG,KAAKJ,EAAf;IACD,CAFe,CAAhB;IAGAP,QAAQ,CAACQ,OAAD,CAAR;EACD,CALD;;EAMA,MAAMI,WAAW,GAAIL,EAAD,IAAO;IACzBR,KAAK,CAACU,MAAN,CAAa,CAACI,IAAD,EAAOF,GAAP,KAAc;MACzB,OAAOf,IAAI,GAAG,CAAd;IACD,CAFD;EAGD,CAJD;;EAKA,oBACE,QAAC,IAAD;IAAM,OAAO,EAAC,UAAd;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,SAAD;MAAW,QAAQ,EAAEK,YAArB;MAAmC,KAAK,EAAC,iBAAzC;MAA2D,OAAO,EAAC;IAAnE;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,MAAD;MAAQ,OAAO,EAAEI,SAAjB;MAA4B,OAAO,EAAC,WAApC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,EAKIN,KAAK,CAACe,GAAN,CAAU,CAACJ,IAAD,EAAOC,GAAP,KAAc;MACtB,oBACE;QAAA,wBACA;UAAA,gBAAgBD,IAAhB;QAAA,GAASC,GAAT;UAAA;UAAA;UAAA;QAAA,QADA,eAEA,QAAC,MAAD;UAAQ,OAAO,EAAC,UAAhB;UAA2B,OAAO,EAAE,MAAML,aAAa,CAACK,GAAD,CAAvD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFA,eAGA,QAAC,MAAD;UAAQ,OAAO,EAAC,UAAhB;UAA2B,OAAO,EAAE,MAAMC,WAAW,CAACD,GAAD,CAArD;UAAA,gBAA8DD,IAAI,CAACd,IAAnE;QAAA;UAAA;UAAA;UAAA;QAAA,QAHA;MAAA,gBADF;IAOD,CARD,CALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CAvCD;;GAAMD,I;;KAAAA,I;AAwCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}