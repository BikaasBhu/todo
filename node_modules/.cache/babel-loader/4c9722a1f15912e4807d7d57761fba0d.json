{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/test-react/src/Components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport { Button, TextField, Card } from '@mui/material';\nimport React, { useState } from 'react';\nimport './Todo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Todo = () => {\n  _s();\n\n  const [userName, setUserName] = useState();\n  const [message, setMessage] = useState();\n  const [input, setInput] = useState([]);\n\n  const click = () => {\n    if (!userName && !message) {\n      alert('fill the some data');\n    } else {\n      setInput([...input, {\n        userName,\n        message\n      }]);\n      setMessage('');\n      setUserName('');\n    }\n  };\n\n  const removeItem = id => {\n    const newData = input.filter((curr, ind) => {\n      return ind !== id;\n    });\n    setInput(newData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      variant: \"filled\",\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Add Your Note \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Enter your title\",\n        type: \"text\",\n        variant: \"outlined\",\n        onChange: e => setUserName(e.target.value),\n        value: userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"enter mesaage\",\n        type: \"text\",\n        variant: \"outlined\",\n        onChange: e => setMessage(e.target.value),\n        value: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"Button\",\n        onClick: click,\n        variant: \"outlined\",\n        children: \" + \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: input.map((curr, ind) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"filled\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cardTitle\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"title\",\n                children: [\" \", curr.userName, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                className: \"hr\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cardBody\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"message\",\n                children: [\" \", curr.message, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              className: \"remove\",\n              onClick: () => removeItem(ind),\n              children: \" + \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              className: \"remove\",\n              onClick: () => lileItem(ind),\n              children: \" + \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)]\n          }, ind, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Todo, \"TOg+d92yHWa1PUPJfeCi/J9d1pg=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["Button","TextField","Card","React","useState","Todo","userName","setUserName","message","setMessage","input","setInput","click","alert","removeItem","id","newData","filter","curr","ind","e","target","value","map","lileItem"],"sources":["/data/data/com.termux/files/home/test-react/src/Components/Todo.js"],"sourcesContent":["import {Button, TextField, Card} from '@mui/material'\nimport React, {useState} from 'react'\nimport './Todo.css'\nconst Todo = () =>{\n    const [userName, setUserName] = useState()\n  const [message, setMessage] = useState()\n  const [input, setInput] = useState([])\n  const click = () =>{\n    if (!userName && !message) {\n      alert('fill the some data')\n    }else{\n      setInput([...input, {userName, message}])\n      setMessage('')\n      setUserName('')\n    }\n  }\n  const removeItem = (id) =>{\n    const newData = input.filter((curr, ind) =>{\n      return ind !== id\n    })\n    setInput(newData)\n  }\n  return(\n    <>\n    <Card variant='filled' className='form'>\n      <h1> Add Your Note </h1>\n      <TextField label='Enter your title' type='text' variant='outlined' onChange={e => setUserName(e.target.value)} value={userName} />\n      <TextField label='enter mesaage' type='text' variant='outlined' onChange={e => setMessage(e.target.value)} value={message} />\n      <Button className='Button' onClick={click} variant='outlined'> + </Button>\n    </Card>\n    <div className='flex'>\n      {\n        input.map((curr, ind) =>{\n          return (\n            <>\n            <Card className='filled' key={ind}>\n              <div className='cardTitle'>\n                <h1 className='title'> {curr.userName} </h1>\n                <hr className='hr' />\n              </div>\n              <div className='cardBody'>\n                <h1 className='message'> {curr.message} </h1>\n              </div>\n              <Button variant='outlined' className='remove' onClick={()=> removeItem(ind)}> + </Button>\n              <Button variant='outlined' className='remove' onClick={()=> lileItem(ind)}> + </Button>\n            </Card>\n          </>\n          )\n        })\n      }\n      </div>\n    </>\n  )\n}\nexport default Todo"],"mappings":"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"},"metadata":{},"sourceType":"module"}